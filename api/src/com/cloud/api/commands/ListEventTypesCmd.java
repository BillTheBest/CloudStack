// Copyright 2012 Citrix Systems, Inc. Licensed under the
// Apache License, Version 2.0 (the "License"); you may not use this
// file except in compliance with the License.  Citrix Systems, Inc.
// reserves all rights not expressly granted by the License.
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Automatically generated by addcopyright.py at 04/03/2012
package com.cloud.api.commands;

import java.util.ArrayList;

import org.apache.log4j.Logger;

import com.cloud.api.BaseCmd;
import com.cloud.api.Implementation;
import com.cloud.api.response.EventTypeResponse;
import com.cloud.api.response.ListResponse;
import com.cloud.user.Account;

@Implementation(description = "List Event Types", responseObject = EventTypeResponse.class)
public class ListEventTypesCmd extends BaseCmd {
    public static final Logger s_logger = Logger.getLogger(ListEventTypesCmd.class.getName());
    private static final String s_name = "listeventtypesresponse";

    @Override
    public String getCommandName() {
        return s_name;
    }

    public long getEntityOwnerId() {
        return Account.ACCOUNT_ID_SYSTEM;
    }

    @Override
    public void execute() {
        String[] result = _mgr.listEventTypes();
        ListResponse<EventTypeResponse> response = new ListResponse<EventTypeResponse>();
        ArrayList<EventTypeResponse> responses = new ArrayList<EventTypeResponse>();
        if (result != null) {
            for (String eventType : result) {
                EventTypeResponse eventTypeResponse = new EventTypeResponse();
                eventTypeResponse.setName(eventType);
                eventTypeResponse.setObjectName("eventtype");
                responses.add(eventTypeResponse);
            }
        }
        response.setResponses(responses);
        response.setResponseName(getCommandName());
        this.setResponseObject(response);
    }
}
